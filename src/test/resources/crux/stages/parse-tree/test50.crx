// print message character

fn garble(in: int, in2: int) -> int {
   let tmp: int;
   tmp = 0;
   let count: int;
   count = 0;
   while ((in != 0) || (in2 != 0)) {
      let a: int;
      let b: int;
      a = in - ((in /2) * 2);
      b = in2 - ((in2 /2) * 2);
      if ((a == 1) && (b == 0)) {
         tmp = tmp * 2 + 1;
      } else {
        if ((a == 0) && (b == 1)) {
          tmp = tmp * 2 + 1;
        } else {
          tmp = tmp * 2;
        }
      }
      in = in / 2;
      in2 = in2 / 2;
      count = count + 1;
   }
   let out: int;
   out = 0;
   while (count != 0) {
     out = (out * 2) + (tmp - (tmp /2) * 2);
     tmp = tmp/2;
     count = count - 1;
   }
   return out;
}

fn main() {
  let i: int;
  i=0;
  while (i < 40) {
    let tmp: int;
    tmp = readChar();
    printChar(garble(tmp, 7+i));
    i=i+1;
  }
}
